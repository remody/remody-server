type User {
	id: ID! @unique
	name: String!
	email: String! @unique
	password: String!
	Files: [File!]! @relation(name: "FileToUser", onDelete: CASCADE)
	UserSchemas: [UserSchema!]!
		@relation(name: "UserSchemaToUser", onDelete: CASCADE)
}

type File {
	id: ID! @unique
	filename: String!
	mimetype: String!
	encoding: String!
	path: String! @unique
	owner: User! @relation(name: "FileToUser", onDelete: SET_NULL)
}

type AuthAccessCode {
	id: ID! @unique
	user: User! @relation(name: "AuthAccessCodeToUser", onDelete: SET_NULL)
}

type UserSchema {
	id: ID! @unique
	user: User! @relation(name: "UserSchemaToUser", onDelete: SET_NULL)
	name: String!
	rowCount: Int @default(value: "1")
}
